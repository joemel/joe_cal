/*Arrays to hold lat/lng data for use with the Directions module*/
 var latitude = [];
 var longitude = [];
 
 /*Addresses that need to be geocoded*/
 var locations = new Array('770 Broadway, New York, NY', '111 Lawrence St, Brooklyn, NY');
 
 $(document).ready(function() {
   /*Using the Nominatim API Service to geocode the addresses in the locations array*/
   for (i=0; i<locations.length; i++) {
     $.ajax({
       url: 'http://open.mapquestapi.com/nominatim/v1/search',
       dataType: 'json',
       async: false,
       crossDomain: true,
       data: {
         q: locations[i],
         format: 'json'
       },
 
       success: function(data, textStatus, jqXHR) {
         /*Storing the lat/lngs in an array for later use*/
         latitude.push(data[0].lat);
         longitude.push(data[0].lon);
 
         /*Get map and create the route when done*/
         if(i==locations.length-1) {
           getMap();
         }
       }
     });
   }
 
   function getMap() {
     window.map = new MQA.TileMap(
       document.getElementById('map'),
       13,
       {lat:40.037788, lng:-76.305818},
       'osm');
 
     /*This uses the MQA.withModule support to download and initialize the routing support modules. When the
     modules are ready for use, the function provided as the last parameter will be executed.*/
     MQA.withModule('directions', function() {
    
       /*Uses the MQA.TileMap.addRoute function (added to the TileMap with the directions module)
       passing in an array of location objects as the only parameter.*/
       map.addRoute([
         {latLng: {lat:latitude[0], lng:longitude[0]}},
         {latLng: {lat:latitude[1], lng:longitude[1]}}
       ]);
     });
   }
 });